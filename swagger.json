{
    "swagger": "2.0",
    "info": {
        "version": "V1",
        "title": "INSIGHTUS SITEVIEW API V1",
        "contact": {
            "name": "Insightus",
            "url": "https://siteview.plus",
            "email": "support@insightus.com.au"
        }
    },
    "host": "siteview.plus",
    "schemes": [
        "https"
    ],
    "paths": {
        "/api/v1/account/login": {
            "post": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "login by mobile only",
                "operationId": "AccountV1_Login",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/refresh": {
            "post": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "login by mobile only",
                "operationId": "AccountV1_Login",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RefreshTokenRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TokenResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/register": {
            "post": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "register operator owner",
                "operationId": "AccountV1_Register",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RegistrationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/RegistrationResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/account/forgotpassword": {
            "post": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "Forgot Password",
                "operationId": "AccountV1_ForgotPassword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForgotPasswordModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the result of forgot password"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Don't have permission"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/resetpassword/{hash}": {
            "get": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "Reset Password",
                "operationId": "AccountV1_ResetPassword",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "hash",
                        "in": "path",
                        "description": "hash",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the result of reset password"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Don't have permission"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/resetpassword": {
            "post": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "Reset Password",
                "operationId": "AccountV1_ResetPassword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResetPasswordModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the result of reset password"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Don't have permission"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/getuserinfo": {
            "get": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "get user info",
                "operationId": "AccountV1_GetUserInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/UserInfoRes"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/linkedin/obtainaccesstoken": {
            "post": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "Obtain access token by LinkedIn",
                "operationId": "AccountV1_ObtainAccessToken",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RequestAccessToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the local access token"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Don't have permission"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/{operatorId}/checkemail": {
            "post": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "check email is available for add",
                "operationId": "AccountV1_CheckEmailIsAvailableForAdd",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "operatorId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckEmailForAddRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/account/{operatorId}/checkemail/upload": {
            "post": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "upload excel file for list of email for validate",
                "operationId": "AccountV1_UploadFileForValidatingEmail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "operatorId",
                        "in": "path",
                        "description": "operatorId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ValidateWhenUploadUserForInviteResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/account/changepassword": {
            "put": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "Change Password",
                "operationId": "AccountV1_ChangePassword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangePasswordModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the result of reset password"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Don't have permission"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/updateinfo": {
            "put": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "Update Info",
                "operationId": "AccountV1_UpdateInfo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the result of reset password"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Don't have permission"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/updateavatar": {
            "put": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "Update Info",
                "operationId": "AccountV1_UpdateAvatar",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateAvatarRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Returns the result of reset password"
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Don't have permission"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/account/{operatorId}/ban": {
            "put": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "ban user",
                "operationId": "AccountV1_BanUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "operatorId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BanUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/account/{operatorId}/unban": {
            "put": {
                "tags": [
                    "AccountV1"
                ],
                "summary": "unban user",
                "operationId": "AccountV1_UnbanUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "operatorId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/BanUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/cad/versions/{siteId}/{libraryId}": {
            "post": {
                "tags": [
                    "CadV1"
                ],
                "summary": "get all versions for 3d models of site , AUTH",
                "operationId": "CadV1_GetVersionsOfSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchVersionClutterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CadVersionResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/cad/search/{versionId}/{libraryId}": {
            "post": {
                "tags": [
                    "CadV1"
                ],
                "summary": "Search cad",
                "operationId": "CadV1_SearchCad",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "versionId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchClutterPhotoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CadResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/cad/upload/begin": {
            "get": {
                "tags": [
                    "CadV1"
                ],
                "summary": "begin upload cad, generating a url for client uploading, AUTH",
                "operationId": "CadV1_BeginUpload",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RequestUploadClutterResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/cad/upload/finish/{libraryId}/{siteId}": {
            "post": {
                "tags": [
                    "CadV1"
                ],
                "summary": "finsh upload cad  AUTH",
                "operationId": "CadV1_FinishUpload",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FinishUploadCadRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/cad/purchase/{siteId}/{libraryId}": {
            "post": {
                "tags": [
                    "CadV1"
                ],
                "summary": "purchase a versions for cad of site , AUTH",
                "operationId": "CadV1_PurchaseVersionsOfSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseClutterVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/cctv/{siteId}/{libraryId}": {
            "get": {
                "tags": [
                    "CctvV1"
                ],
                "summary": "get all cctv for enterprise site , AUTH",
                "operationId": "CctvV1_GetAllCctvOfEnterpriseSite",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CctvResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            },
            "post": {
                "tags": [
                    "CctvV1"
                ],
                "summary": "create cctv for enterprise site , AUTH",
                "operationId": "CctvV1_CreateCctv",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateCctvRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CctvResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/cctv/{siteId}/{libraryId}/{cctvId}": {
            "put": {
                "tags": [
                    "CctvV1"
                ],
                "summary": "update cctv for enterprise site , AUTH",
                "operationId": "CctvV1_UpdateCctv",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cctvId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateCctvRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CctvResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "CctvV1"
                ],
                "summary": "delete cctv for enterprise site , AUTH",
                "operationId": "CctvV1_DeleteCctv",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "cctvId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/clutter/search/{version}/{libraryId}": {
            "post": {
                "tags": [
                    "ClutterV1"
                ],
                "summary": "Search clutter photo",
                "operationId": "ClutterV1_SearchClutterPhoto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "version",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchClutterPhotoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/GroupClutterPhotoResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/clutter/versions/{siteId}/{libraryId}": {
            "post": {
                "tags": [
                    "ClutterV1"
                ],
                "summary": "get all versions for clutter of site , AUTH",
                "operationId": "ClutterV1_GetVersionsOfSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchVersionClutterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ClutterVersionResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/clutter/purchase/{siteId}/{libraryId}": {
            "post": {
                "tags": [
                    "ClutterV1"
                ],
                "summary": "purchase a versions for 3d models of site , AUTH",
                "operationId": "ClutterV1_PurchaseVersionsOfSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseClutterVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/clutter/upload/begin": {
            "get": {
                "tags": [
                    "ClutterV1"
                ],
                "summary": "begin upload photo, generating a url for client uploading, AUTH",
                "operationId": "ClutterV1_BeginUpload",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RequestUploadClutterResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/clutter/upload/finish/{libraryId}/{siteId}": {
            "post": {
                "tags": [
                    "ClutterV1"
                ],
                "operationId": "ClutterV1_FinishUpload",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FinishUploadClutterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/dataevent": {
            "post": {
                "tags": [
                    "DataEventV1"
                ],
                "summary": "test",
                "operationId": "DataEventV1_CreateDataEvent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataEventOverviewResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/dataevent/{siteId}/{libraryId}": {
            "get": {
                "tags": [
                    "DataEventV1"
                ],
                "summary": "get all cctv for enterprise site , AUTH",
                "operationId": "DataEventV1_GetDataEventOfSite",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataEventOverviewResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/dataevent/{libraryId}": {
            "post": {
                "tags": [
                    "DataEventV1"
                ],
                "summary": "search events of legend library , AUTH",
                "operationId": "DataEventV1_GetDataEventOfLibrary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "libraryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DataEventOverviewResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/dataevent/{siteId}/{libraryId}/detail/{eventId}": {
            "get": {
                "tags": [
                    "DataEventV1"
                ],
                "summary": "get all cctv for enterprise site , AUTH",
                "operationId": "DataEventV1_GetDetailOfEvent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "eventId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DataEventDetailResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/eaglecapture/record": {
            "post": {
                "tags": [
                    "EagleCaptureV1"
                ],
                "operationId": "EagleCaptureV1_VideoRecord",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewKurentoVideoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/eaglecapture/recent/{libraryId}": {
            "get": {
                "tags": [
                    "EagleCaptureV1"
                ],
                "operationId": "EagleCaptureV1_VideoTopRecent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KurentoVideoRecentResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/eaglecapture/video/search/{libraryId}": {
            "post": {
                "tags": [
                    "EagleCaptureV1"
                ],
                "operationId": "EagleCaptureV1_VideoSearchLocation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchVideoByLocation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/KurentoVideoRecentResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/eaglecapture/video/{id}/screenshot": {
            "post": {
                "tags": [
                    "EagleCaptureV1"
                ],
                "operationId": "EagleCaptureV1_VideoScreenshotCreate",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewScreenshotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/eaglecapture/video/{id}": {
            "get": {
                "tags": [
                    "EagleCaptureV1"
                ],
                "operationId": "EagleCaptureV1_VideoDetail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/eaglecapture/create": {
            "post": {
                "tags": [
                    "EagleCaptureV1"
                ],
                "operationId": "EagleCaptureV1_EagleCreate",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewEaleCaptureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/eaglecapture/search": {
            "post": {
                "tags": [
                    "EagleCaptureV1"
                ],
                "operationId": "EagleCaptureV1_EagleSearch",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchEagleCaptureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/eaglecapture/assign": {
            "put": {
                "tags": [
                    "EagleCaptureV1"
                ],
                "operationId": "EagleCaptureV1_EagleAssign",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AssignEaleCaptureRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Created"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/events/{libraryId}": {
            "post": {
                "tags": [
                    "EventV1"
                ],
                "summary": "search events for enterprise site , AUTH",
                "operationId": "EventV1_GetEventOfLibraryId",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "libraryId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchGlobalEventRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SearchGlobalEventResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/interior/{libraryId}/{siteId}": {
            "post": {
                "tags": [
                    "InteriorV1"
                ],
                "summary": "new interior , AUTH",
                "operationId": "InteriorV1_NewInterior",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewInteriorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/interior/{libraryId}/{siteId}/{interiorId}": {
            "post": {
                "tags": [
                    "InteriorV1"
                ],
                "summary": "new box for interior , AUTH",
                "operationId": "InteriorV1_NewBoxForInterior",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "interiorId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewBoxForInteriorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            },
            "delete": {
                "tags": [
                    "InteriorV1"
                ],
                "summary": "delete interior , AUTH",
                "operationId": "InteriorV1_DeleteInterior",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "interiorId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/interior/{libraryId}/{siteId}/{interiorId}/{boxId}": {
            "delete": {
                "tags": [
                    "InteriorV1"
                ],
                "summary": "delete box of for interior , AUTH",
                "operationId": "InteriorV1_DeleteBox",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "interiorId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "boxId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/interior/{libraryId}/{siteId}/{interiorId}/box/{boxId}": {
            "put": {
                "tags": [
                    "InteriorV1"
                ],
                "summary": "update box of for interior , AUTH",
                "operationId": "InteriorV1_UpdateBox",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "boxId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateBoxRequest"
                        }
                    },
                    {
                        "name": "interiorId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/interior/{libraryId}/{siteId}/{interiorId}/hotspot/{hotspotId}": {
            "delete": {
                "tags": [
                    "InteriorV1"
                ],
                "summary": "delete hotspot for interior , AUTH",
                "operationId": "InteriorV1_DeleteHotspot",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "interiorId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "hotspotId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/interior/{libraryId}/{siteId}/{boxId}/hotspots": {
            "post": {
                "tags": [
                    "InteriorV1"
                ],
                "summary": "new box for interior , AUTH",
                "operationId": "InteriorV1_NewHotspotForInterior",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "boxId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/HotspotOfInteriorRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/interior/{siteId}": {
            "get": {
                "tags": [
                    "InteriorV1"
                ],
                "summary": "get all interiors of site",
                "operationId": "InteriorV1_GetAllInterior",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/InteriorResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/library/all": {
            "get": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "Get all operator",
                "operationId": "LibraryV1_GetAllLibraries",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/GetAllOperatorsResult"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/library/create": {
            "post": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "create new library",
                "operationId": "LibraryV1_CreateLibrary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateOperatorModelNew"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/library/new": {
            "post": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "create new library",
                "operationId": "LibraryV1_CreateLibraryFromShop",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewLibraryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/library/test": {
            "post": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "create new library",
                "operationId": "LibraryV1_CreateLibraryEnterprise",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewLibraryRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/library/status": {
            "post": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "update status of library, by shop",
                "operationId": "LibraryV1_UpdateStatusLibrary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateLibraryStatusRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/library/type": {
            "post": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "update type of library, by shop",
                "operationId": "LibraryV1_UpdateTypeLibrary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateLibraryTypeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/library/subscription/{libraryId}": {
            "get": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "get subscription for library",
                "operationId": "LibraryV1_GetCurrentSubscription",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/library/subscription/{libraryId}/upgrade/hero": {
            "put": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "upgrade subscription to hero plan",
                "operationId": "LibraryV1_UpgradeSubscriptionToHero",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/library/cancel/{libraryId}": {
            "delete": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "cancel subscription for library",
                "operationId": "LibraryV1_CancelSubscription",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok"
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/library/{libraryId}/upload/site": {
            "post": {
                "tags": [
                    "LibraryV1"
                ],
                "summary": "upload sites, only owner",
                "operationId": "LibraryV1_UploadSiteFiles",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "upload sites"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/managelibs/searchlibs": {
            "post": {
                "tags": [
                    "ManageLibs"
                ],
                "summary": "search library",
                "operationId": "ManageLibs_SearchLibrary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchLibRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "search library",
                        "schema": {
                            "$ref": "#/definitions/GetLibRepsonse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/managelibs/detail/{libraryId}": {
            "get": {
                "tags": [
                    "ManageLibs"
                ],
                "summary": "view library detail",
                "operationId": "ManageLibs_GetLibraryDetail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "view operator detail",
                        "schema": {
                            "$ref": "#/definitions/LibDetailResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/managelibs/{libraryId}": {
            "put": {
                "tags": [
                    "ManageLibs"
                ],
                "summary": "upgrade to legend",
                "operationId": "ManageLibs_UpgardeToLegend",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "upgrade enterprise"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/managelibs/newlegend": {
            "post": {
                "tags": [
                    "ManageLibs"
                ],
                "operationId": "ManageLibs_NewLegendLibrary",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/NewEnterpriseRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "new legend plan"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/misc/site/lastversion": {
            "get": {
                "tags": [
                    "MiscV1"
                ],
                "operationId": "MiscV1_LastVersionOfSite",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LastVersionResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/misc/privatesite/lastversion/{libraryId}": {
            "get": {
                "tags": [
                    "MiscV1"
                ],
                "operationId": "MiscV1_LastVersionOfPrivateSite",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/LastVersionResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/misc/testrealtimenew": {
            "get": {
                "tags": [
                    "MiscV1"
                ],
                "operationId": "MiscV1_TestRealtimeEvent",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/misc/media/upload": {
            "post": {
                "tags": [
                    "MiscV1"
                ],
                "summary": "upload media file, image or video only",
                "operationId": "MiscV1_UploadMedia",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "media object",
                        "schema": {
                            "$ref": "#/definitions/UploadMediaResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/misc/media/interior/upload": {
            "post": {
                "tags": [
                    "MiscV1"
                ],
                "summary": "upload interior image",
                "operationId": "MiscV1_UploadInteriorMedia",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "media object",
                        "schema": {
                            "$ref": "#/definitions/UploadMediaResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/misc/onedrive/exchange": {
            "post": {
                "tags": [
                    "MiscV1"
                ],
                "operationId": "MiscV1_OneDriveExchangeToken",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/OneDriveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/misc/google/exchange": {
            "post": {
                "tags": [
                    "MiscV1"
                ],
                "operationId": "MiscV1_GoogleExchangeToken",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ExchangeGoogleToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "token for chatbox"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/misc/google/list/{token}": {
            "get": {
                "tags": [
                    "MiscV1"
                ],
                "operationId": "MiscV1_GoogleListFile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/misc/google/list/{token}/sub/{folderId}": {
            "get": {
                "tags": [
                    "MiscV1"
                ],
                "operationId": "MiscV1_GoogleListSubFile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/misc/onedrive/list/{token}": {
            "get": {
                "tags": [
                    "MiscV1"
                ],
                "operationId": "MiscV1_OneDriveListFile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/misc/onedrive/list/{token}/sub/{folderId}": {
            "get": {
                "tags": [
                    "MiscV1"
                ],
                "operationId": "MiscV1_OneDriveListSubFile",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "folderId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/notification/search/{libraryId}": {
            "post": {
                "tags": [
                    "NotificationStatusV1"
                ],
                "summary": "search in range on map, AUTH",
                "operationId": "NotificationStatusV1_SearchNotification",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchNotificationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NotificationStatusResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/panorama/versions/{siteId}/{libraryId}": {
            "post": {
                "tags": [
                    "PanoramaV1"
                ],
                "summary": "get all versions for 3d models of site , AUTH",
                "operationId": "PanoramaV1_GetVersionsOfSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchVersionClutterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PanoramaVersionResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/panorama/search/{versionId}/{libraryId}": {
            "post": {
                "tags": [
                    "PanoramaV1"
                ],
                "summary": "Search panorama photo",
                "operationId": "PanoramaV1_SearchPanoramaPhoto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "versionId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchClutterPhotoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PanoramaResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/panorama/hotspot/{panoramaId}/{libraryId}": {
            "post": {
                "tags": [
                    "PanoramaV1"
                ],
                "summary": "add hotspot",
                "operationId": "PanoramaV1_AddHotspot",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "panoramaId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AddHotspotRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/panorama/hotspot/{panoramaId}/{libraryId}/{hotspotId}": {
            "delete": {
                "tags": [
                    "PanoramaV1"
                ],
                "summary": "remove hotspot",
                "operationId": "PanoramaV1_RemoveHotspot",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "panoramaId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "hotspotId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/panorama/upload/begin": {
            "get": {
                "tags": [
                    "PanoramaV1"
                ],
                "summary": "begin upload photo, generating a url for client uploading, AUTH",
                "operationId": "PanoramaV1_BeginUpload",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RequestUploadClutterResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/panorama/upload/finish/{libraryId}/{siteId}": {
            "post": {
                "tags": [
                    "PanoramaV1"
                ],
                "operationId": "PanoramaV1_FinishUpload",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FinishUploadPanoramaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/panorama/purchase/{siteId}/{libraryId}": {
            "post": {
                "tags": [
                    "PanoramaV1"
                ],
                "summary": "purchase a versions for 3d models of site , AUTH",
                "operationId": "PanoramaV1_PurchaseVersionsOfSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseClutterVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/site/search/detail/{siteId}": {
            "get": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "Search site by id, AUTH",
                "operationId": "SiteV1_SearchSiteById",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/site/search/byrange": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "Search nearby site by range on map, AUTH",
                "operationId": "SiteV1_SearchByRange",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SiteRangeSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/site/search/nearby": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "search nearby site by range on map, AUTH",
                "operationId": "SiteV1_SearchNearby",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SiteNearbySearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteNearByResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/site/search/range": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "search in range on map, AUTH",
                "operationId": "SiteV1_SearchNearby",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SiteSearchInRangeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteNearByResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/site/search/{libraryId}/nearby": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "search nearby site by range on map, AUTH",
                "operationId": "SiteV1_SearchNearbyWithLibraryId",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SiteNearbySearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteNearByResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/site/search/closet": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "search closet site by current location in current geobound on map",
                "operationId": "SiteV1_SearchClosetSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ClosetSiteSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/ClosetSiteSearchResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/site/search/geobound": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "search by geo bound",
                "operationId": "SiteV1_SearchByGeoBound",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "bts geobound search request model",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SiteGeoBoundSearchRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SearchSiteGeoBoundSearchResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/site/search/polygon": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "search points inside a polygon,AUTH",
                "operationId": "SiteV1_SearchByPolygon",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "list of locations which determine polygon",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchPointInPolygonRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteGeoBoundESearchObject"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/site/keyword/{take}/{skip}": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "search site by keyword, AUTH",
                "operationId": "SiteV1_SearchSiteByKeyword",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "take",
                        "in": "path",
                        "description": "number of records consumer wants to take",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "path",
                        "description": "number of records be skipped",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "keyword to search site",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchSiteByKeywordRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/SearchSiteByKeywordResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/site/exist": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "check if site exist by name, AUTH",
                "operationId": "SiteV1_CheckSiteExistByName",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "request to check if site exists",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckSiteExistRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ok",
                        "schema": {
                            "$ref": "#/definitions/CheckSiteExistResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/site/new": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "create new site",
                "operationId": "SiteV1_CreateNewSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CreateSiteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/site/{id}/overview": {
            "get": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "overview info of site",
                "operationId": "SiteV1_GetSiteOverviewInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of site",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/SiteOverviewInfo"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            },
            "put": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "overview info of site",
                "operationId": "SiteV1_UpdateSiteOverviewInfo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of site",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateSiteInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/site/{id}/stream": {
            "get": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "get stream info of a site",
                "operationId": "SiteV1_GetSiteStreamInfo",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of site",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            },
            "put": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "update stream info of a site",
                "operationId": "SiteV1_UpdateSiteStreamInfo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "id of site",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateSiteStreamRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/site/{id}/recordvideo/{take}/{skip}": {
            "post": {
                "tags": [
                    "SiteV1"
                ],
                "summary": "get recorded videos of camera, AUTH",
                "operationId": "SiteV1_GetRecordedVideoOfCamera",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchRecordedVideoRequest"
                        }
                    },
                    {
                        "name": "take",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetRecordVideoResponseV2"
                        }
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/stripe/pay/test": {
            "post": {
                "tags": [
                    "StripeV1"
                ],
                "summary": "pay by new card, AUTH",
                "operationId": "StripeV1_Test",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "request model for paying by new card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayByNewCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/stripe/cards": {
            "get": {
                "tags": [
                    "StripeV1"
                ],
                "summary": "listing all cards, AUTH",
                "operationId": "StripeV1_GetAllCards",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StripeCardInfoResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/stripe/remove/{cardId}": {
            "delete": {
                "tags": [
                    "StripeV1"
                ],
                "summary": "listing all cards, AUTH",
                "operationId": "StripeV1_DeleteCard",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "cardId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "203": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/stripe/pay/newcard": {
            "post": {
                "tags": [
                    "StripeV1"
                ],
                "summary": "pay by new card, AUTH",
                "operationId": "StripeV1_PayByNewCard",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "request model for paying by new card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayByNewCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/stripe/pay/existcard": {
            "post": {
                "tags": [
                    "StripeV1"
                ],
                "summary": "pay by exist card , AUTH",
                "operationId": "StripeV1_PayByExistCard",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "description": "request model for paying by new card",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PayByExistCardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/stripe/ppv/clear": {
            "put": {
                "tags": [
                    "StripeV1"
                ],
                "summary": "clear Pay-Per-View license when application close, AUTH",
                "operationId": "StripeV1_ClearPayPerViewLicense",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "202": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ClearPPVLicenseResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/stripe/history/{take}/{skip}": {
            "get": {
                "tags": [
                    "StripeV1"
                ],
                "summary": "get history of purchasing, AUTH",
                "operationId": "StripeV1_GetPurchaseHistory",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "take",
                        "in": "path",
                        "description": "number of records in page",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "path",
                        "description": "number of records be skipped",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/PhotoSetLicensePurchaseHistoryResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/stripewebhook/notify": {
            "post": {
                "tags": [
                    "StripeWebhookV1"
                ],
                "operationId": "StripeWebhookV1_Index",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/threedmodel/versions/{siteId}/{libraryId}": {
            "post": {
                "tags": [
                    "ThreeModelV1"
                ],
                "summary": "get all versions for 3d models of site , AUTH",
                "operationId": "ThreeModelV1_GetVersionsOfSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchVersionThreeDimensionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ThreeDimensionVersionResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/threedmodel/purchase/{siteId}/{libraryId}": {
            "post": {
                "tags": [
                    "ThreeModelV1"
                ],
                "summary": "purchase a versions for 3d models of site , AUTH",
                "operationId": "ThreeModelV1_PurchaseVersionsOfSite",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseVersionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/threedmodel/editheight/{libraryId}/{siteId}/{versionId}": {
            "put": {
                "tags": [
                    "ThreeModelV1"
                ],
                "summary": "edit the height of 3d model , AUTH",
                "operationId": "ThreeModelV1_EditHeightOfModel",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "siteId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "versionId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/EditHeightModel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/threedmodel/closet/{libraryId}/{siteId}/{version}": {
            "post": {
                "tags": [
                    "ThreeModelV1"
                ],
                "summary": "search closet photo when user click on screen",
                "operationId": "ThreeModelV1_SearchClosetPhoto",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "data used to search closet photo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchClosetPhotoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SearchClosetPhotoResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/threedmodel/photos/{libraryId}/{siteId}/{version}": {
            "post": {
                "tags": [
                    "ThreeModelV1"
                ],
                "summary": "search closet photo when user click on screen",
                "operationId": "ThreeModelV1_GetPhotos",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "version",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "description": "data used to search closet photo",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchPhotoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/threedmodel/photo": {
            "post": {
                "tags": [
                    "ThreeModelV1"
                ],
                "summary": "get photo url by id with license",
                "operationId": "ThreeModelV1_GetPhotoById",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetPhotoUrl"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SearchClosetPhotoResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/threedmodel/upload/begin": {
            "get": {
                "tags": [
                    "ThreeModelV1"
                ],
                "operationId": "ThreeModelV1_BeginUpload",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RequestUpload3dModelResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/threedmodel/upload/finish/{libraryId}/{siteId}": {
            "post": {
                "tags": [
                    "ThreeModelV1"
                ],
                "operationId": "ThreeModelV1_FinishUpload",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FinishUpload3dModelRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/threedmodel/sectors/{siteId}": {
            "get": {
                "tags": [
                    "ThreeModelV1"
                ],
                "summary": "get sectors of site AUTH",
                "operationId": "ThreeModelV1_GetSectorsOfSite",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "siteId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SectorResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/transaction/{libraryId}": {
            "get": {
                "tags": [
                    "TransactionsV1"
                ],
                "summary": "get list transaction of library",
                "operationId": "TransactionsV1_GetAllTransactionOverview",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TransactionOverviewModel"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/transaction/{libraryId}/detail/{id}": {
            "get": {
                "tags": [
                    "TransactionsV1"
                ],
                "summary": "get transaction detail",
                "operationId": "TransactionsV1_GetTransactionDetail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "id",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/TransactionDetailModel"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/trivallogs/recordmulti": {
            "post": {
                "tags": [
                    "TrivalLogsV1"
                ],
                "operationId": "TrivalLogsV1_LogMultiDataFromMobile",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/TrivalLogMultiRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/trivallogs/search/{libraryId}": {
            "post": {
                "tags": [
                    "TrivalLogsV1"
                ],
                "operationId": "TrivalLogsV1_SearchTrival",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SearchTrivalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SearchTrivalReponse"
                        }
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/trivallogs/filter/{libraryId}": {
            "post": {
                "tags": [
                    "TrivalLogsV1"
                ],
                "operationId": "TrivalLogsV1_FilterDrivePoint",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/FilterTrivalRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SearchTrivalReponse"
                        }
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/trivallogs/checknewest": {
            "post": {
                "tags": [
                    "TrivalLogsV1"
                ],
                "summary": "Check newest month has data for area",
                "operationId": "TrivalLogsV1_CheckHasNewestDataForArea",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/CheckNewestDataForAreaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/trivallogs/networks": {
            "get": {
                "tags": [
                    "TrivalLogsV1"
                ],
                "operationId": "TrivalLogsV1_ListNetworkProvider",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/NetworkResponse"
                            }
                        }
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/trivallogs/network/months": {
            "post": {
                "tags": [
                    "TrivalLogsV1"
                ],
                "operationId": "TrivalLogsV1_GetMonthsOfNetwork",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/GetMonthForAreaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MonthResponseObject"
                            }
                        }
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/trivallogs/purchase/{libraryId}": {
            "post": {
                "tags": [
                    "TrivalLogsV1"
                ],
                "operationId": "TrivalLogsV1_PurchaseDriveTrial",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseTrialRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": "Success"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/upload/media": {
            "post": {
                "tags": [
                    "UploadV1"
                ],
                "summary": "upload media file, image or video only",
                "operationId": "UploadV1_UploadMedia",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "media object",
                        "schema": {
                            "$ref": "#/definitions/UploadMediaResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/upload/doc": {
            "post": {
                "tags": [
                    "UploadV1"
                ],
                "summary": "upload doc file",
                "operationId": "UploadV1_UploadDoc",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "media object",
                        "schema": {
                            "$ref": "#/definitions/UploadMediaResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/upload/photo/beginupload": {
            "post": {
                "tags": [
                    "UploadV1"
                ],
                "summary": "begin upload photo, generating a url for client uploading, AUTH",
                "operationId": "UploadV1_BeginUploadPhoto",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/RequestUploadPhotoResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/{take}/{skip}": {
            "get": {
                "tags": [
                    "UserV1"
                ],
                "summary": "get list users of an operator",
                "operationId": "UserV1_GetUsersOfOperator",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "take",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetUsersOfOperatorResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}": {
            "get": {
                "tags": [
                    "UserV1"
                ],
                "summary": "get list users of an operator",
                "operationId": "UserV1_GetAllUsersOfOperator",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetUsersOfOperatorResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/user/{userId}": {
            "get": {
                "tags": [
                    "UserV1"
                ],
                "summary": "get user by id",
                "operationId": "UserV1_GetUserById",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetUserInformationResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            },
            "put": {
                "tags": [
                    "UserV1"
                ],
                "summary": "update user info",
                "operationId": "UserV1_UpdateUserInfo",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/UpdateUserInfoRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v1/users/role/{libraryId}/user/{userId}": {
            "put": {
                "tags": [
                    "UserV1"
                ],
                "summary": "change role of user",
                "operationId": "UserV1_ChangeRoleForUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "operator Id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "id of user that system will change role",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeRoleOfUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/{userId}": {
            "delete": {
                "tags": [
                    "UserV1"
                ],
                "summary": "delete user out of operator",
                "operationId": "UserV1_DeleteUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/ban/{userId}": {
            "put": {
                "tags": [
                    "UserV1"
                ],
                "summary": "ban user out of operator",
                "operationId": "UserV1_BanUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/unban/{userId}": {
            "put": {
                "tags": [
                    "UserV1"
                ],
                "summary": "ban user out of operator",
                "operationId": "UserV1_UnbanUser",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "userId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/checkemail/upload": {
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "upload excel file for list of email for validate",
                "operationId": "UserV1_UploadFileForValidatingEmail",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "libraryId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ValidateWhenUploadUserForInviteResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/invitation/{libraryId}/{take}/{skip}": {
            "get": {
                "tags": [
                    "UserV1"
                ],
                "summary": "get invitations of operator by id of operator",
                "operationId": "UserV1_GetPendingInvitationsOfOperator",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "take",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    },
                    {
                        "name": "skip",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "integer",
                        "format": "int32"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetListInvitationsResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/invites": {
            "get": {
                "tags": [
                    "UserV1"
                ],
                "summary": "get invitations of operator by id of operator",
                "operationId": "UserV1_GetAllPendingInvitations",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/GetListInvitationsResponse"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            },
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "invite someone to operator",
                "operationId": "UserV1_InviteToOperator",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/InviteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/invites/loginandaccept": {
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "login accept invitation to operator",
                "operationId": "UserV1_LoginAndAcceptInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginAndAcceptInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/invites/accept": {
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "accept invitation to operator",
                "operationId": "UserV1_AcceptInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/LoginAndAcceptInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/invitation/accept": {
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "accept invitation to operator",
                "operationId": "UserV1_AcceptInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/AcceptInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/invites/forceaccept": {
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "accept invitation to operator",
                "operationId": "UserV1_AcceptInvitationForce",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ForceAcceptToken"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/invites/signupandaccept": {
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "signup and accept invitation to operator",
                "operationId": "UserV1_SignupAndAcceptInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SignupAndAcceptInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/invites/resendall": {
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "resend email to all pending invitation",
                "operationId": "UserV1_ResendAllPendingInvitation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/invites/resend": {
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "resend email of invitation to specified email",
                "operationId": "UserV1_ResendPendingInvitationForUser",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ResendInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/{libraryId}/invites/remove": {
            "post": {
                "tags": [
                    "UserV1"
                ],
                "summary": "revoke invitation by email",
                "operationId": "UserV1_DeleteInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RemoveInvitationRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/invitation/{libraryId}/changerole": {
            "put": {
                "tags": [
                    "UserV1"
                ],
                "summary": "change role of invitation",
                "operationId": "UserV1_ChangeRoleForInvitation",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "description": "",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeRoleOfUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/users/invites/validate/{token}": {
            "get": {
                "tags": [
                    "UserV1"
                ],
                "summary": "validate accept invitation to operator",
                "operationId": "UserV1_ValidateInvitation",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "token",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "$ref": "#/definitions/ValidateInviteResponseModel"
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/vlos/{libraryId}/purchase/{siteId}": {
            "post": {
                "tags": [
                    "VirtualLosV1"
                ],
                "summary": "purchase virtual LOS",
                "operationId": "VirtualLosV1_Purchase",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "model",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/PurchaseVirtualLosRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/vlos/{libraryId}/photos/{siteId}": {
            "get": {
                "tags": [
                    "VirtualLosV1"
                ],
                "summary": "get purchased virtual LOS",
                "operationId": "VirtualLosV1_GetPhotos",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VirtualLosResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/vlos/{libraryId}/photos/{siteId}/group": {
            "get": {
                "tags": [
                    "VirtualLosV1"
                ],
                "summary": "get purchased virtual LOS",
                "operationId": "VirtualLosV1_GetPhotosNew",
                "consumes": [],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "libraryId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "siteId",
                        "in": "path",
                        "description": "",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/VirtualLosGroupResponse"
                            }
                        }
                    },
                    "401": {
                        "description": "You don't have permission for access this API"
                    },
                    "404": {
                        "description": "API is not found"
                    },
                    "500": {
                        "description": "There is error for your request"
                    }
                }
            }
        },
        "/api/v1/wowzacallback/recordsuccess": {
            "post": {
                "tags": [
                    "WowzaCallbackHandlerV1"
                ],
                "summary": "notify recorded 1 video for stream(camera), use only by wowza server, AUTHBASIC",
                "operationId": "WowzaCallbackHandlerV1_RecordVideoSuccess",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/RecordVideoRequestNew"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/api/v1/wowzacallback/changestatus": {
            "put": {
                "tags": [
                    "WowzaCallbackHandlerV1"
                ],
                "summary": "notify status of 1 cctv is change, use only by wowza server, AUTHBASIC",
                "operationId": "WowzaCallbackHandlerV1_ChangeStatusOfCctv",
                "consumes": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml",
                    "application/x-www-form-urlencoded"
                ],
                "produces": [
                    "application/json",
                    "text/json",
                    "application/xml",
                    "text/xml"
                ],
                "parameters": [
                    {
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/ChangeStatusCctvRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "201": {
                        "description": ""
                    },
                    "401": {
                        "description": "You don't have permission"
                    },
                    "404": {
                        "description": "Page not found"
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "LoginRequest": {
            "required": [
                "Email",
                "Password"
            ],
            "type": "object",
            "properties": {
                "Email": {
                    "description": "Email",
                    "type": "string"
                },
                "Password": {
                    "description": "Password",
                    "type": "string"
                }
            }
        },
        "TokenResponse": {
            "type": "object",
            "properties": {
                "Raw": {
                    "type": "string",
                    "readOnly": true
                },
                "Json": {
                    "type": "object",
                    "readOnly": true
                },
                "IsHttpError": {
                    "type": "boolean",
                    "readOnly": true
                },
                "HttpErrorStatusCode": {
                    "format": "int32",
                    "enum": [
                        100,
                        101,
                        200,
                        201,
                        202,
                        203,
                        204,
                        205,
                        206,
                        300,
                        300,
                        301,
                        301,
                        302,
                        302,
                        303,
                        303,
                        304,
                        305,
                        306,
                        307,
                        307,
                        400,
                        401,
                        402,
                        403,
                        404,
                        405,
                        406,
                        407,
                        408,
                        409,
                        410,
                        411,
                        412,
                        413,
                        414,
                        415,
                        416,
                        417,
                        426,
                        500,
                        501,
                        502,
                        503,
                        504,
                        505
                    ],
                    "type": "integer",
                    "readOnly": true
                },
                "HttpErrorReason": {
                    "type": "string",
                    "readOnly": true
                },
                "AccessToken": {
                    "type": "string",
                    "readOnly": true
                },
                "IdentityToken": {
                    "type": "string",
                    "readOnly": true
                },
                "Error": {
                    "type": "string",
                    "readOnly": true
                },
                "IsError": {
                    "type": "boolean",
                    "readOnly": true
                },
                "ExpiresIn": {
                    "format": "int64",
                    "type": "integer",
                    "readOnly": true
                },
                "TokenType": {
                    "type": "string",
                    "readOnly": true
                },
                "RefreshToken": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "RefreshTokenRequest": {
            "description": "RefreshTokenRequest",
            "required": [
                "ClientId",
                "ClientSecret"
            ],
            "type": "object",
            "properties": {
                "RefreshToken": {
                    "description": "Token",
                    "type": "string"
                },
                "ClientId": {
                    "description": "Client Id",
                    "type": "string"
                },
                "ClientSecret": {
                    "description": "Client Secret",
                    "type": "string"
                }
            }
        },
        "RegistrationRequest": {
            "description": "Registration request",
            "required": [
                "Email",
                "FirstName",
                "LastName",
                "Password",
                "ConfirmPassword"
            ],
            "type": "object",
            "properties": {
                "Email": {
                    "description": "Email address",
                    "type": "string"
                },
                "FirstName": {
                    "description": "",
                    "type": "string"
                },
                "LastName": {
                    "description": "Last name",
                    "type": "string"
                },
                "Password": {
                    "description": "password",
                    "type": "string"
                },
                "ConfirmPassword": {
                    "description": "confirm password",
                    "type": "string"
                }
            }
        },
        "RegistrationResponse": {
            "description": "Response for registration",
            "type": "object",
            "properties": {
                "UserId": {
                    "description": "user id",
                    "type": "string"
                },
                "RedirectUrl": {
                    "description": "redirect url to chargify",
                    "type": "string"
                }
            }
        },
        "ForgotPasswordModel": {
            "required": [
                "Email"
            ],
            "type": "object",
            "properties": {
                "Email": {
                    "type": "string"
                },
                "BaseUrl": {
                    "type": "string"
                }
            }
        },
        "ResetPasswordModel": {
            "required": [
                "Code",
                "Password"
            ],
            "type": "object",
            "properties": {
                "Code": {
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            }
        },
        "UserInfoRes": {
            "description": "user info result",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "id of user",
                    "type": "string"
                },
                "UserName": {
                    "description": "username of user",
                    "type": "string"
                },
                "FirstName": {
                    "description": "firstname of user",
                    "type": "string"
                },
                "LastName": {
                    "description": "lastname of user",
                    "type": "string"
                },
                "Email": {
                    "description": "email of user",
                    "type": "string"
                },
                "PhoneNumber": {
                    "description": "phonenumber of user",
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "CurrentOperator": {
                    "$ref": "#/definitions/UserInfoOperatorModel",
                    "description": "Current Operator"
                },
                "RoleInOperator": {
                    "description": "permissions of user",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "DefaultLocation": {
                    "$ref": "#/definitions/LocationResponse",
                    "description": "DefaultLocation of BTS"
                },
                "AvatarUrl": {
                    "description": "Avatar url",
                    "type": "string"
                },
                "IsInsightusSuperAdmin": {
                    "type": "boolean"
                },
                "Libraries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LibraryOverviewResponse"
                    }
                }
            }
        },
        "UserInfoOperatorModel": {
            "description": "UserInfo Operator Model",
            "type": "object",
            "properties": {
                "OperatorId": {
                    "description": "id of library",
                    "type": "string"
                },
                "OperatorName": {
                    "description": "name of library",
                    "type": "string"
                },
                "Band": {
                    "description": "band of library",
                    "type": "string"
                },
                "DataImportStatus": {
                    "format": "int32",
                    "description": "Data import status",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "IsTrial": {
                    "type": "boolean"
                },
                "StartTrialDate": {
                    "format": "date-time",
                    "type": "string"
                },
                "CanUpdate": {
                    "type": "boolean"
                },
                "IsEnterprise": {
                    "type": "boolean"
                },
                "IsWaitingApproveEnterprise": {
                    "type": "boolean"
                }
            }
        },
        "LocationResponse": {
            "description": "Location response",
            "type": "object",
            "properties": {
                "Lat": {
                    "format": "double",
                    "description": "Lat",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "description": "Lon",
                    "type": "number"
                }
            }
        },
        "LibraryOverviewResponse": {
            "description": "",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Id",
                    "type": "string"
                },
                "Name": {
                    "description": "Name",
                    "type": "string"
                },
                "IsOwnerOfLibrary": {
                    "description": "Is owner of library",
                    "type": "boolean"
                },
                "Role": {
                    "description": "Role in library",
                    "type": "string"
                },
                "SubscriptionType": {
                    "format": "int32",
                    "type": "integer"
                },
                "PeriodEnd": {
                    "format": "date-time",
                    "type": "string"
                },
                "StripeStatus": {
                    "description": "trialing, active, past_due,canceled, unpaid",
                    "type": "string"
                },
                "Active": {
                    "type": "boolean"
                }
            }
        },
        "RequestAccessToken": {
            "description": "Request access token by Insightus",
            "required": [
                "Provider",
                "AccessToken",
                "RedirectUri"
            ],
            "type": "object",
            "properties": {
                "Provider": {
                    "description": "Provider name , \"Insightus\"",
                    "type": "string"
                },
                "AccessToken": {
                    "description": "Access token that issued by Insightus",
                    "type": "string"
                },
                "RedirectUri": {
                    "type": "string"
                }
            }
        },
        "CheckEmailForAddRequest": {
            "description": "Check email request",
            "required": [
                "EmailAddress"
            ],
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "description": "Email address",
                    "type": "string"
                }
            }
        },
        "ValidateWhenUploadUserForInviteResponse": {
            "description": "Validate When Upload User For Invite Response",
            "type": "object",
            "properties": {
                "UserOverviews": {
                    "description": "user overview has been uploaded",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserOverviewForInviting"
                    }
                },
                "Errors": {
                    "description": "Errors",
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "UserOverviewForInviting": {
            "description": "user overview for inviting",
            "type": "object",
            "properties": {
                "Email": {
                    "description": "Email address",
                    "type": "string"
                },
                "FirstName": {
                    "description": "First Name",
                    "type": "string"
                },
                "LastName": {
                    "description": "Last Name",
                    "type": "string"
                },
                "IsValid": {
                    "description": "Is valid",
                    "type": "boolean"
                },
                "ErrorText": {
                    "description": "error for this record",
                    "type": "string"
                }
            }
        },
        "ChangePasswordModel": {
            "required": [
                "OldPassword",
                "NewPassword",
                "ConfirmPassword"
            ],
            "type": "object",
            "properties": {
                "OldPassword": {
                    "type": "string"
                },
                "NewPassword": {
                    "type": "string"
                },
                "ConfirmPassword": {
                    "type": "string"
                }
            }
        },
        "UpdateInfoRequest": {
            "required": [
                "FirstName",
                "LastName"
            ],
            "type": "object",
            "properties": {
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "Title": {
                    "type": "string"
                },
                "Phone": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                }
            }
        },
        "UpdateAvatarRequest": {
            "type": "object",
            "properties": {
                "PhotoUrl": {
                    "type": "string"
                }
            }
        },
        "BanUserRequest": {
            "description": "Ban user request",
            "required": [
                "Email"
            ],
            "type": "object",
            "properties": {
                "Email": {
                    "description": "Email will be banned",
                    "type": "string"
                }
            }
        },
        "SearchVersionClutterRequest": {
            "description": "",
            "type": "object",
            "properties": {
                "LibraryId": {
                    "description": "Library Id, if user is guest pass empty value",
                    "type": "string"
                },
                "ClientOneTimeCode": {
                    "description": "Client one time code, client should generate for a working session and send",
                    "type": "string"
                }
            }
        },
        "CadVersionResponse": {
            "type": "object",
            "properties": {
                "VersionId": {
                    "type": "string"
                },
                "VersionName": {
                    "type": "string"
                },
                "LicenseType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "UploadedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "LibraryId": {
                    "description": "Id of library who upload this version",
                    "type": "string"
                },
                "IsOwner": {
                    "type": "boolean"
                }
            }
        },
        "SearchClutterPhotoRequest": {
            "type": "object",
            "properties": {
                "SiteId": {
                    "type": "string"
                },
                "OneTimeToken": {
                    "type": "string"
                },
                "Height": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "CadResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "CadUrl": {
                    "type": "string"
                }
            }
        },
        "RequestUploadClutterResponse": {
            "type": "object",
            "properties": {
                "UploadId": {
                    "type": "string"
                },
                "UploadPhotoSasUrl": {
                    "type": "string"
                }
            }
        },
        "FinishUploadCadRequest": {
            "type": "object",
            "properties": {
                "UploadId": {
                    "type": "string"
                },
                "LicenseType": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "PurchaseClutterVersionRequest": {
            "required": [
                "Type",
                "VersionId"
            ],
            "type": "object",
            "properties": {
                "Type": {
                    "format": "int32",
                    "enum": [
                        10,
                        20
                    ],
                    "type": "integer"
                },
                "OneTimeToken": {
                    "type": "string"
                },
                "VersionId": {
                    "type": "string"
                }
            }
        },
        "CctvResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "Desc": {
                    "type": "string"
                },
                "IsConnected": {
                    "type": "boolean"
                }
            }
        },
        "UpdateCctvRequest": {
            "required": [
                "Name",
                "Url",
                "Desc"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                },
                "Desc": {
                    "type": "string"
                }
            }
        },
        "GroupClutterPhotoResponse": {
            "type": "object",
            "properties": {
                "Photos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GroupSearchPhoto"
                    }
                },
                "Heights": {
                    "type": "array",
                    "items": {
                        "format": "int32",
                        "type": "integer"
                    }
                }
            }
        },
        "GroupSearchPhoto": {
            "type": "object",
            "properties": {
                "Height": {
                    "format": "double",
                    "type": "number"
                },
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SearchClutterPhotoResponse"
                    }
                }
            }
        },
        "SearchClutterPhotoResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "PhotoUrl": {
                    "type": "string"
                },
                "ThumbnailUrl": {
                    "type": "string"
                },
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                },
                "Heading": {
                    "format": "double",
                    "type": "number"
                },
                "Altitude": {
                    "format": "double",
                    "type": "number"
                },
                "RoundHeight": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "ClutterVersionResponse": {
            "type": "object",
            "properties": {
                "VersionId": {
                    "type": "string"
                },
                "VersionName": {
                    "type": "string"
                },
                "UploadedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "LicenseType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "IsOwner": {
                    "type": "boolean"
                }
            }
        },
        "FinishUploadClutterRequest": {
            "type": "object",
            "properties": {
                "UploadId": {
                    "type": "string"
                },
                "LicenseType": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "DataEventOverviewResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "DataEventType": {
                    "format": "int32",
                    "type": "integer"
                },
                "DataEventTypeText": {
                    "type": "string"
                },
                "ShortDesc": {
                    "type": "string"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "SearchEventRequest": {
            "type": "object",
            "properties": {
                "EventType": {
                    "format": "int32",
                    "description": "-1 = all, 0= telecom performance, 10 = telecom network alarm",
                    "type": "integer"
                },
                "Keyword": {
                    "description": "Keyword to search, empty = search without keyword",
                    "type": "string"
                }
            }
        },
        "DataEventDetailResponse": {
            "type": "object",
            "properties": {
                "ColumnsInJson": {
                    "type": "string"
                },
                "ValuesInJson": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "DataEventType": {
                    "format": "int32",
                    "type": "integer"
                },
                "DataEventTypeText": {
                    "type": "string"
                },
                "ShortDesc": {
                    "type": "string"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "NewKurentoVideoRequest": {
            "required": [
                "VideoId",
                "MacAddress",
                "AzureVideoUrl"
            ],
            "type": "object",
            "properties": {
                "VideoId": {
                    "type": "string"
                },
                "MacAddress": {
                    "type": "string"
                },
                "AzureVideoUrl": {
                    "type": "string"
                },
                "AzureThumbUrl": {
                    "type": "string"
                },
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "KurentoVideoRecentResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "CreateDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SearchVideoByLocation": {
            "type": "object",
            "properties": {
                "PolygonCoordinates": {
                    "description": "Points of Polygon, at least 3",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoordinateRequest"
                    }
                },
                "StartDateTimeUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "EndDateTimeUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "CoordinateRequest": {
            "description": "Coordinate for a point of polygon",
            "type": "object",
            "properties": {
                "Lat": {
                    "format": "double",
                    "description": "Lat",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "description": "Lon",
                    "type": "number"
                }
            }
        },
        "NewScreenshotRequest": {
            "required": [
                "PhotoId",
                "PhotoUrl"
            ],
            "type": "object",
            "properties": {
                "PhotoId": {
                    "type": "string"
                },
                "PhotoUrl": {
                    "type": "string"
                },
                "MacAddress": {
                    "type": "string"
                }
            }
        },
        "NewEaleCaptureRequest": {
            "required": [
                "LibraryId",
                "MacAddress"
            ],
            "type": "object",
            "properties": {
                "LibraryId": {
                    "type": "string"
                },
                "MacAddress": {
                    "type": "string"
                }
            }
        },
        "SearchEagleCaptureRequest": {
            "type": "object",
            "properties": {
                "LibraryId": {
                    "description": "If empty, search all library",
                    "type": "string"
                },
                "MacAddress": {
                    "description": "if empty , search all mac",
                    "type": "string"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "AssignEaleCaptureRequest": {
            "required": [
                "LibraryId",
                "MacAddress"
            ],
            "type": "object",
            "properties": {
                "LibraryId": {
                    "type": "string"
                },
                "MacAddress": {
                    "type": "string"
                }
            }
        },
        "SearchGlobalEventRequest": {
            "description": "",
            "type": "object",
            "properties": {
                "PageSize": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "PageIndex": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                },
                "Keyword": {
                    "description": "Keyword to search, empty = search without keyword",
                    "type": "string"
                }
            }
        },
        "SearchGlobalEventResponse": {
            "description": "",
            "type": "object",
            "properties": {
                "Events": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/GlobalEventDetailResponse"
                    }
                },
                "Total": {
                    "format": "int32",
                    "description": "",
                    "type": "integer"
                }
            }
        },
        "GlobalEventDetailResponse": {
            "description": "Global event detail response",
            "type": "object",
            "properties": {
                "Severity": {
                    "description": "severity",
                    "type": "string"
                },
                "AlarmId": {
                    "description": "alarm id",
                    "type": "string"
                },
                "Name": {
                    "description": "Name",
                    "type": "string"
                },
                "NeType": {
                    "type": "string"
                },
                "AlarmSource": {
                    "type": "string"
                },
                "MoName": {
                    "type": "string"
                },
                "LocationInformation": {
                    "type": "string"
                },
                "OccuredOn": {
                    "format": "date-time",
                    "type": "string"
                },
                "ClearedOn": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "NewInteriorRequest": {
            "description": "New interior request",
            "required": [
                "Name",
                "BaseImage",
                "OriginalHeight",
                "OriginalWidth",
                "ScaleHeight",
                "ScaleWidth"
            ],
            "type": "object",
            "properties": {
                "Name": {
                    "description": "Name",
                    "type": "string"
                },
                "BaseImage": {
                    "description": "Base Image Url",
                    "type": "string"
                },
                "OriginalHeight": {
                    "format": "double",
                    "type": "number"
                },
                "OriginalWidth": {
                    "format": "double",
                    "type": "number"
                },
                "ScaleHeight": {
                    "format": "double",
                    "type": "number"
                },
                "ScaleWidth": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "NewBoxForInteriorRequest": {
            "description": "New interior request",
            "required": [
                "BasePhoto360ImageUrl",
                "Path",
                "Hotspots"
            ],
            "type": "object",
            "properties": {
                "BasePhoto360ImageUrl": {
                    "description": "Base Image Url",
                    "type": "string"
                },
                "Path": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                },
                "Hotspots": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/HotspotOfInteriorRequest"
                    }
                }
            }
        },
        "HotspotOfInteriorRequest": {
            "required": [
                "Text",
                "Pitch",
                "Yaw"
            ],
            "type": "object",
            "properties": {
                "Text": {
                    "type": "string"
                },
                "Pitch": {
                    "format": "double",
                    "type": "number"
                },
                "Yaw": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "UpdateBoxRequest": {
            "required": [
                "BasePhoto360ImageUrl",
                "Path"
            ],
            "type": "object",
            "properties": {
                "BasePhoto360ImageUrl": {
                    "description": "Base Image Url",
                    "type": "string"
                },
                "Path": {
                    "description": "",
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                }
            }
        },
        "InteriorResponse": {
            "type": "object",
            "properties": {
                "Name": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "BaseImageUrl": {
                    "type": "string"
                },
                "OriginalHeight": {
                    "format": "double",
                    "type": "number"
                },
                "OriginalWidth": {
                    "format": "double",
                    "type": "number"
                },
                "ScaleHeight": {
                    "format": "double",
                    "type": "number"
                },
                "ScaleWidth": {
                    "format": "double",
                    "type": "number"
                },
                "Boxes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InteriorBoxResponse"
                    }
                }
            }
        },
        "InteriorBoxResponse": {
            "type": "object",
            "properties": {
                "Path": {
                    "type": "array",
                    "items": {
                        "type": "array",
                        "items": {
                            "format": "double",
                            "type": "number"
                        }
                    }
                },
                "Hotspots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/InteriorHotspotResponse"
                    }
                },
                "Photo360Url": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                }
            }
        },
        "InteriorHotspotResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Text": {
                    "type": "string"
                },
                "Yaw": {
                    "format": "double",
                    "type": "number"
                },
                "Pitch": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "GetAllOperatorsResult": {
            "description": "",
            "type": "object",
            "properties": {
                "Operators": {
                    "description": "List of library response",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OperatorResponse"
                    }
                }
            }
        },
        "OperatorResponse": {
            "description": "operator response",
            "type": "object",
            "properties": {
                "OperatorId": {
                    "description": "id of library",
                    "type": "string"
                },
                "OperatorName": {
                    "description": "name of Operator",
                    "type": "string"
                },
                "OperatorBand": {
                    "description": "band of Operator",
                    "type": "string"
                },
                "IsOwner": {
                    "description": "owner of Operator",
                    "type": "boolean"
                },
                "Active": {
                    "type": "boolean"
                },
                "DataImportStatus": {
                    "format": "int32",
                    "description": "Data Import Status",
                    "enum": [
                        0,
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                }
            }
        },
        "CreateOperatorModelNew": {
            "description": "Create Operator Model",
            "required": [
                "LibraryName",
                "SubscriptionType",
                "BillingAddress1",
                "BillingSuburb",
                "BillingCity",
                "BillingCountry",
                "IsNewCreditCard",
                "StripeCode"
            ],
            "type": "object",
            "properties": {
                "LibraryName": {
                    "description": "Operator name",
                    "type": "string"
                },
                "SubscriptionType": {
                    "format": "int32",
                    "description": "Subscription Type, 0: Starter, 10: Hero, 20: Legend",
                    "type": "integer"
                },
                "BillingAddress1": {
                    "description": "",
                    "type": "string"
                },
                "BillingSuburb": {
                    "description": "",
                    "type": "string"
                },
                "BillingCity": {
                    "description": "",
                    "type": "string"
                },
                "BillingCountry": {
                    "description": "",
                    "type": "string"
                },
                "IsNewCreditCard": {
                    "description": "",
                    "type": "boolean"
                },
                "StripeCode": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "NewLibraryRequest": {
            "description": "",
            "type": "object",
            "properties": {
                "OwnerEmail": {
                    "type": "string"
                },
                "OwnerFirstName": {
                    "type": "string"
                },
                "OwnerLastName": {
                    "type": "string"
                },
                "LibraryName": {
                    "type": "string"
                },
                "LibraryType": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "UpdateLibraryStatusRequest": {
            "required": [
                "LibraryId",
                "Active"
            ],
            "type": "object",
            "properties": {
                "LibraryId": {
                    "type": "string"
                },
                "Active": {
                    "type": "boolean"
                }
            }
        },
        "UpdateLibraryTypeRequest": {
            "required": [
                "LibraryId",
                "Type"
            ],
            "type": "object",
            "properties": {
                "LibraryId": {
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        10,
                        20
                    ],
                    "type": "integer"
                }
            }
        },
        "SearchLibRequest": {
            "description": "search lib request",
            "required": [
                "Type",
                "PageSize",
                "PageIndex"
            ],
            "type": "object",
            "properties": {
                "Keyword": {
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        10,
                        20,
                        -1
                    ],
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "type": "integer"
                },
                "PageIndex": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "GetLibRepsonse": {
            "type": "object",
            "properties": {
                "Total": {
                    "format": "int32",
                    "type": "integer"
                },
                "Data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/LibResponse"
                    }
                }
            }
        },
        "LibResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "OwnerEmail": {
                    "type": "string"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        10,
                        20
                    ],
                    "type": "integer"
                },
                "TotalUsers": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "LibDetailResponse": {
            "type": "object",
            "properties": {
                "OwnerName": {
                    "type": "string"
                },
                "CurrentPeriodStartDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "CurrentPeriodEndDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "Plans": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/StripePlanDetail"
                    }
                },
                "Status": {
                    "type": "string"
                },
                "Id": {
                    "type": "string"
                },
                "Name": {
                    "type": "string"
                },
                "OwnerEmail": {
                    "type": "string"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "Type": {
                    "format": "int32",
                    "enum": [
                        0,
                        10,
                        20
                    ],
                    "type": "integer"
                },
                "TotalUsers": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "StripePlanDetail": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "ShortName": {
                    "type": "string"
                },
                "FullName": {
                    "type": "string"
                },
                "Description": {
                    "type": "string",
                    "readOnly": true
                },
                "Quantity": {
                    "format": "int32",
                    "type": "integer"
                },
                "Interval": {
                    "type": "string"
                },
                "Price": {
                    "format": "double",
                    "type": "number"
                },
                "Currency": {
                    "type": "string"
                },
                "Total": {
                    "format": "double",
                    "type": "number"
                },
                "PriceFormat": {
                    "type": "string",
                    "readOnly": true
                },
                "TotalFormat": {
                    "type": "string",
                    "readOnly": true
                }
            }
        },
        "NewEnterpriseRequest": {
            "required": [
                "OwnerEmail",
                "LibraryName",
                "Price",
                "Interval",
                "Unit",
                "OwnerFirstName",
                "OwnerLastName"
            ],
            "type": "object",
            "properties": {
                "OwnerEmail": {
                    "type": "string"
                },
                "LibraryName": {
                    "type": "string"
                },
                "Price": {
                    "format": "double",
                    "description": "e.g 10000",
                    "type": "number"
                },
                "Interval": {
                    "format": "int32",
                    "description": "e.g 3",
                    "type": "integer"
                },
                "Unit": {
                    "description": "week, month, year",
                    "type": "string"
                },
                "OwnerFirstName": {
                    "type": "string"
                },
                "OwnerLastName": {
                    "type": "string"
                }
            }
        },
        "LastVersionResponse": {
            "type": "object",
            "properties": {
                "VersionId": {
                    "format": "int32",
                    "type": "integer"
                },
                "SiteJsonUrl": {
                    "type": "string"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "UploadMediaResponse": {
            "description": "Upload media response",
            "type": "object",
            "properties": {
                "FileName": {
                    "description": "File name",
                    "type": "string"
                },
                "FileUrl": {
                    "description": "File Url",
                    "type": "string"
                }
            }
        },
        "OneDriveRequest": {
            "required": [
                "AuthorizationCode",
                "CallbackUrl"
            ],
            "type": "object",
            "properties": {
                "AuthorizationCode": {
                    "type": "string"
                },
                "CallbackUrl": {
                    "type": "string"
                }
            }
        },
        "ExchangeGoogleToken": {
            "required": [
                "Scope",
                "AuthorizationCode",
                "CallbackUrl"
            ],
            "type": "object",
            "properties": {
                "Scope": {
                    "type": "string"
                },
                "AuthorizationCode": {
                    "type": "string"
                },
                "CallbackUrl": {
                    "type": "string"
                }
            }
        },
        "SearchNotificationRequest": {
            "description": "",
            "type": "object",
            "properties": {
                "PageIndex": {
                    "format": "int32",
                    "description": "page index, start = 0",
                    "type": "integer"
                },
                "PageSize": {
                    "format": "int32",
                    "description": "page size, normally  = 10",
                    "type": "integer"
                },
                "StatusType": {
                    "format": "int32",
                    "description": "0 = processing, 10 = completed, null = all",
                    "type": "integer"
                }
            }
        },
        "NotificationStatusResponse": {
            "description": "",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Content": {
                    "type": "string"
                },
                "ReferenceId": {
                    "type": "string"
                },
                "Status": {
                    "format": "int32",
                    "description": "0 = processing, 10 = completed",
                    "type": "integer"
                },
                "Type": {
                    "format": "int32",
                    "description": "20:3D mode, 30: clutter, 40: panorama, 50: cad, 60: virtual los",
                    "type": "integer"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "PanoramaVersionResponse": {
            "type": "object",
            "properties": {
                "VersionId": {
                    "type": "string"
                },
                "VersionName": {
                    "type": "string"
                },
                "LicenseType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "UploadedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "LibraryId": {
                    "description": "Id of library who upload this version",
                    "type": "string"
                },
                "IsOwner": {
                    "type": "boolean"
                }
            }
        },
        "PanoramaResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "PhotoUrl": {
                    "type": "string"
                },
                "ThumbnailUrl": {
                    "type": "string"
                },
                "Hotspots": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PanoramaHotspotModel"
                    }
                }
            }
        },
        "PanoramaHotspotModel": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Type": {
                    "type": "string"
                },
                "Text": {
                    "type": "string"
                },
                "Url": {
                    "type": "string"
                },
                "Pitch": {
                    "format": "double",
                    "type": "number"
                },
                "Yaw": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "AddHotspotRequest": {
            "required": [
                "Text",
                "Pitch",
                "Yaw"
            ],
            "type": "object",
            "properties": {
                "Text": {
                    "type": "string"
                },
                "Pitch": {
                    "format": "double",
                    "type": "number"
                },
                "Yaw": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "FinishUploadPanoramaRequest": {
            "type": "object",
            "properties": {
                "UploadId": {
                    "type": "string"
                },
                "LicenseType": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SiteRangeSearchRequest": {
            "description": "Site range search request",
            "required": [
                "Lon",
                "Lat"
            ],
            "type": "object",
            "properties": {
                "Lon": {
                    "format": "double",
                    "description": "lon",
                    "type": "number"
                },
                "Lat": {
                    "format": "double",
                    "description": "lat",
                    "type": "number"
                },
                "RangeSearchs": {
                    "description": "Range search",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RangeObj"
                    }
                }
            }
        },
        "RangeObj": {
            "type": "object",
            "properties": {
                "MinDistance": {
                    "format": "double",
                    "type": "number"
                },
                "MaxDistance": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SiteNearbySearchRequest": {
            "description": "Site nearby request",
            "required": [
                "Lon",
                "Lat"
            ],
            "type": "object",
            "properties": {
                "Lon": {
                    "format": "double",
                    "description": "lon",
                    "type": "number"
                },
                "Lat": {
                    "format": "double",
                    "description": "lat",
                    "type": "number"
                }
            }
        },
        "SiteNearByResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "SiteName": {
                    "type": "string"
                },
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SiteSearchInRangeRequest": {
            "description": "Site nearby request",
            "required": [
                "Lon",
                "Lat",
                "DistanceInMeter"
            ],
            "type": "object",
            "properties": {
                "Lon": {
                    "format": "double",
                    "description": "lon",
                    "type": "number"
                },
                "Lat": {
                    "format": "double",
                    "description": "lat",
                    "type": "number"
                },
                "DistanceInMeter": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "ClosetSiteSearchRequest": {
            "description": "Site nearby request",
            "required": [
                "CameraLocation",
                "UpperRight",
                "LowerLeft",
                "CameraHeight"
            ],
            "type": "object",
            "properties": {
                "CameraLocation": {
                    "$ref": "#/definitions/GeoPoint",
                    "description": "camera location"
                },
                "UpperRight": {
                    "$ref": "#/definitions/GeoPoint",
                    "description": "Upper right of geobound"
                },
                "UpperLeft": {
                    "$ref": "#/definitions/GeoPoint",
                    "description": "Upper left of geobound"
                },
                "LowerLeft": {
                    "$ref": "#/definitions/GeoPoint",
                    "description": "Lower left of geobound"
                },
                "LowerRight": {
                    "$ref": "#/definitions/GeoPoint",
                    "description": "Lower right of geobound"
                },
                "CameraHeight": {
                    "format": "double",
                    "description": "Camera Height",
                    "type": "number"
                }
            }
        },
        "GeoPoint": {
            "type": "object",
            "properties": {
                "lat": {
                    "format": "double",
                    "type": "number"
                },
                "lon": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "ClosetSiteSearchResponse": {
            "description": "Response to search closet site request",
            "type": "object",
            "properties": {
                "ClosetSite": {
                    "$ref": "#/definitions/SiteGeoBoundESearchObject",
                    "description": "The site closet to the search (current) location"
                },
                "Distance": {
                    "format": "double",
                    "description": "Distance from viewer camera location to closet site",
                    "type": "number"
                },
                "Height": {
                    "format": "double",
                    "description": "Height from viewer camera to bottom of closet site",
                    "type": "number"
                }
            }
        },
        "SiteGeoBoundESearchObject": {
            "type": "object",
            "properties": {
                "Type": {
                    "format": "int32",
                    "enum": [
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "CountSite": {
                    "format": "int32",
                    "type": "integer"
                },
                "siteid": {
                    "type": "string"
                },
                "sitename": {
                    "type": "string"
                },
                "location": {
                    "$ref": "#/definitions/EsLocation"
                },
                "numberofjobs": {
                    "format": "int32",
                    "type": "integer"
                },
                "id": {
                    "type": "string"
                },
                "carriername": {
                    "type": "string"
                },
                "networkname": {
                    "type": "string"
                },
                "operatorid": {
                    "type": "string"
                },
                "uploadid": {
                    "type": "string"
                },
                "totalmsg": {
                    "format": "int32",
                    "type": "integer"
                },
                "optionalFields": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OptionalField"
                    }
                }
            }
        },
        "EsLocation": {
            "type": "object",
            "properties": {
                "lat": {
                    "format": "double",
                    "type": "number"
                },
                "lon": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "OptionalField": {
            "type": "object",
            "properties": {
                "key": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "SiteGeoBoundSearchRequest": {
            "description": "Site location search request",
            "type": "object",
            "properties": {
                "BoundTopRightLat": {
                    "format": "double",
                    "description": "Lat of top right",
                    "type": "number"
                },
                "BoundTopRightLon": {
                    "format": "double",
                    "description": "Lon of top right",
                    "type": "number"
                },
                "BoundBottomLeftLat": {
                    "format": "double",
                    "description": "Lat of bottom left",
                    "type": "number"
                },
                "BoundBottomLeftLon": {
                    "format": "double",
                    "description": "Lon of bottom left",
                    "type": "number"
                },
                "ZoomLevel": {
                    "format": "int32",
                    "description": "Zoom level of map",
                    "type": "integer"
                }
            }
        },
        "SearchSiteGeoBoundSearchResponse": {
            "description": "Location Search Result Model",
            "type": "object",
            "properties": {
                "Site": {
                    "$ref": "#/definitions/SiteGeoBoundESearchObject",
                    "description": "Represent object for rendering on map\r\nif Type = 2, its real Site ==&gt; render it on map with surround cells\r\nif Type = 1, its cluster, just render it as circle with number inside"
                }
            }
        },
        "SearchPointInPolygonRequest": {
            "description": "Request for search points in polygon",
            "type": "object",
            "properties": {
                "PolygonCoordinates": {
                    "description": "Points of Polygon, at least 3",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoordinateRequest"
                    }
                }
            }
        },
        "SearchSiteByKeywordRequest": {
            "description": "request to search site by keyword",
            "type": "object",
            "properties": {
                "Keyword": {
                    "description": "Keyword used for search",
                    "type": "string"
                }
            }
        },
        "SearchSiteByKeywordResponse": {
            "description": "response to search site by keyword",
            "type": "object",
            "properties": {
                "Sites": {
                    "description": "List of sites",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SiteGeoBoundESearchObject"
                    }
                }
            }
        },
        "CheckSiteExistRequest": {
            "description": "check site exist request",
            "required": [
                "SiteName"
            ],
            "type": "object",
            "properties": {
                "SiteName": {
                    "description": "Site name",
                    "type": "string"
                }
            }
        },
        "CheckSiteExistResponse": {
            "description": "check site exist response",
            "type": "object",
            "properties": {
                "Exist": {
                    "description": "Indicate if site exists or not",
                    "type": "boolean"
                }
            }
        },
        "CreateSiteRequest": {
            "description": "",
            "required": [
                "SiteName",
                "Lat",
                "Lon",
                "SiteType",
                "LicenseType"
            ],
            "type": "object",
            "properties": {
                "SiteName": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "SiteId": {
                    "type": "string"
                },
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                },
                "LibraryId": {
                    "description": "library id in case user create site as exlusive",
                    "type": "string"
                },
                "SiteType": {
                    "format": "int32",
                    "description": "Site Type: TelecomTower = 10,LawEnforcement = 20,OilGas = 30,Mining = 40,HighVoltageTower = 50,",
                    "type": "integer"
                },
                "LicenseType": {
                    "format": "int32",
                    "description": "License type, 0 : shared, 10 : exclusive(only for enterprise library)",
                    "type": "integer"
                }
            }
        },
        "SiteOverviewInfo": {
            "type": "object",
            "properties": {
                "SiteName": {
                    "type": "string"
                },
                "Address": {
                    "type": "string"
                },
                "LatestVersion": {
                    "type": "string"
                },
                "NewestVersion": {
                    "type": "string"
                },
                "SitePhotoUrl": {
                    "type": "string"
                },
                "SiteType": {
                    "format": "int32",
                    "type": "integer"
                },
                "SiteLicense": {
                    "format": "int32",
                    "type": "integer"
                },
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                },
                "Id": {
                    "type": "string"
                },
                "SiteId": {
                    "type": "string"
                },
                "OwnerLibraryId": {
                    "description": "LibraryId owner of this site if site is created by them",
                    "type": "string"
                },
                "ShortenUrl": {
                    "type": "string"
                }
            }
        },
        "UpdateSiteInfoRequest": {
            "required": [
                "SiteName",
                "Lat",
                "Lon",
                "SiteAddress",
                "SiteOverviewPhotoUrl"
            ],
            "type": "object",
            "properties": {
                "SiteName": {
                    "type": "string"
                },
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                },
                "SiteAddress": {
                    "type": "string"
                },
                "SiteOverviewPhotoUrl": {
                    "type": "string"
                }
            }
        },
        "UpdateSiteStreamRequest": {
            "type": "object",
            "properties": {
                "StreamType": {
                    "format": "int32",
                    "description": "Stream type, 0 = RTMP, 100 = RTSP",
                    "type": "integer"
                },
                "StreamRtspUrl": {
                    "type": "string"
                },
                "StreamRtspDaySave": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SearchRecordedVideoRequest": {
            "description": "Request for search record video",
            "type": "object",
            "properties": {
                "Keyword": {
                    "description": "keyword",
                    "type": "string"
                },
                "StartDateUtc": {
                    "format": "date-time",
                    "description": "start date utc",
                    "type": "string"
                },
                "EndDateUtc": {
                    "format": "date-time",
                    "description": "End date utc",
                    "type": "string"
                }
            }
        },
        "GetRecordVideoResponseV2": {
            "description": "Get record video response",
            "type": "object",
            "properties": {
                "Total": {
                    "format": "int32",
                    "description": "Total video",
                    "type": "integer"
                },
                "RecordedVideos": {
                    "description": "Recorded videos",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/RecordedVideoResponseV2"
                    }
                }
            }
        },
        "RecordedVideoResponseV2": {
            "type": "object",
            "properties": {
                "VideoSrc": {
                    "type": "string"
                },
                "Id": {
                    "description": "Id",
                    "type": "string"
                },
                "Name": {
                    "description": "Name",
                    "type": "string"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "description": "Created Date Utc",
                    "type": "string"
                },
                "VideoUrl": {
                    "description": "Video on-demand url",
                    "type": "string"
                },
                "AndroidVideoUrl": {
                    "description": "Android Video URL",
                    "type": "string"
                },
                "ThumbnailUrl": {
                    "description": "Thumbnail URL",
                    "type": "string"
                },
                "Duration": {
                    "description": "Duration",
                    "type": "string"
                },
                "StartDateUtc": {
                    "format": "date-time",
                    "description": "Start Date Utc",
                    "type": "string"
                },
                "EndDateUtc": {
                    "format": "date-time",
                    "description": "End Date Utc",
                    "type": "string"
                }
            }
        },
        "PayByNewCardRequest": {
            "description": "Pay by new card process",
            "required": [
                "StripeToken",
                "OperatorId",
                "PhotoSetId",
                "LicenseType"
            ],
            "type": "object",
            "properties": {
                "StripeToken": {
                    "description": "Stripe token",
                    "type": "string"
                },
                "OperatorId": {
                    "description": "Operator Id",
                    "type": "string"
                },
                "PhotoSetId": {
                    "description": "Photo Set Id",
                    "type": "string"
                },
                "LicenseType": {
                    "format": "int32",
                    "description": "License Type",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                }
            }
        },
        "StripeCardInfoResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Id",
                    "type": "string"
                },
                "Type": {
                    "description": "Type: VISA, MASTERCARD, DINNER, AMERICANEXPRESS",
                    "type": "string"
                },
                "Last4Digit": {
                    "description": "Last 4 Digit of card",
                    "type": "string"
                },
                "ExpiredDate": {
                    "description": "Expired Date",
                    "type": "string"
                },
                "IsDefault": {
                    "description": "is default, cannot remove",
                    "type": "boolean"
                }
            }
        },
        "PayByExistCardRequest": {
            "description": "Pay by exist card",
            "required": [
                "OperatorId",
                "PhotoSetId",
                "LicenseType"
            ],
            "type": "object",
            "properties": {
                "OperatorId": {
                    "description": "Operator Id",
                    "type": "string"
                },
                "PhotoSetId": {
                    "description": "Photo Set Id",
                    "type": "string"
                },
                "LicenseType": {
                    "format": "int32",
                    "description": "License Type",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                }
            }
        },
        "ClearPPVLicenseResponse": {
            "description": "Response for clearing Pay-Per-View license request",
            "type": "object",
            "properties": {
                "IsSuccess": {
                    "description": "Success",
                    "type": "boolean"
                }
            }
        },
        "PhotoSetLicensePurchaseHistoryResponse": {
            "type": "object",
            "properties": {
                "Total": {
                    "format": "int32",
                    "type": "integer"
                },
                "PurchaseHistoryItems": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PhotoSetLicensePurchaseHistory"
                    }
                }
            }
        },
        "PhotoSetLicensePurchaseHistory": {
            "type": "object",
            "properties": {
                "uploadedTimeUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "version": {
                    "format": "int32",
                    "type": "integer"
                },
                "photoSetTypeInfo": {
                    "type": "string"
                },
                "price": {
                    "format": "int32",
                    "type": "integer"
                },
                "currency": {
                    "type": "string"
                },
                "purchaseTime": {
                    "format": "date-time",
                    "type": "string",
                    "readOnly": true
                },
                "siteName": {
                    "type": "string"
                },
                "operatorName": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                },
                "operatorId": {
                    "type": "string"
                },
                "siteId": {
                    "type": "string"
                },
                "photoSetId": {
                    "type": "string"
                },
                "photoSetType": {
                    "format": "int32",
                    "type": "integer"
                },
                "licenseType": {
                    "format": "int32",
                    "type": "integer"
                },
                "isActive": {
                    "type": "boolean"
                },
                "createdDateUtc": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SearchVersionThreeDimensionRequest": {
            "description": "",
            "type": "object",
            "properties": {
                "LibraryId": {
                    "description": "Library Id, if user is guest pass empty value",
                    "type": "string"
                },
                "ClientOneTimeCode": {
                    "description": "Client one time code, client should generate for a working session and send",
                    "type": "string"
                }
            }
        },
        "ThreeDimensionVersionResponse": {
            "type": "object",
            "properties": {
                "VersionId": {
                    "type": "string"
                },
                "VersionName": {
                    "type": "string"
                },
                "UploadedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "LicenseType": {
                    "format": "int32",
                    "enum": [
                        0,
                        1,
                        2
                    ],
                    "type": "integer"
                },
                "Height": {
                    "format": "double",
                    "type": "number"
                },
                "TileSetUrl": {
                    "type": "string"
                },
                "DefaultPhotoUrl": {
                    "type": "string"
                },
                "DefaultAltitude": {
                    "format": "double",
                    "type": "number"
                },
                "DefaultRelAltitude": {
                    "format": "double",
                    "type": "number"
                },
                "IsOwner": {
                    "type": "boolean"
                },
                "PhotoData": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/PhotoDataResponse"
                    }
                }
            }
        },
        "PhotoDataResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Latitude": {
                    "format": "double",
                    "type": "number"
                },
                "Longitude": {
                    "format": "double",
                    "type": "number"
                },
                "Altitude": {
                    "format": "double",
                    "type": "number"
                },
                "Pitch": {
                    "format": "double",
                    "type": "number"
                },
                "RelativeAlt": {
                    "format": "double",
                    "type": "number"
                },
                "Heading": {
                    "format": "double",
                    "type": "number"
                },
                "Roll": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "PurchaseVersionRequest": {
            "required": [
                "Type",
                "VersionId"
            ],
            "type": "object",
            "properties": {
                "Type": {
                    "format": "int32",
                    "enum": [
                        10,
                        20
                    ],
                    "type": "integer"
                },
                "OneTimeToken": {
                    "type": "string"
                },
                "VersionId": {
                    "type": "string"
                }
            }
        },
        "EditHeightModel": {
            "required": [
                "NewHeight"
            ],
            "type": "object",
            "properties": {
                "NewHeight": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SearchClosetPhotoRequest": {
            "description": "Search closet photo request",
            "required": [
                "Longtitude",
                "Latitude",
                "Altitude",
                "Heading",
                "Pitch",
                "Roll"
            ],
            "type": "object",
            "properties": {
                "Longtitude": {
                    "format": "double",
                    "description": "Longtitude of point which user click",
                    "type": "number"
                },
                "Latitude": {
                    "format": "double",
                    "description": "Latitude of point which user click",
                    "type": "number"
                },
                "Altitude": {
                    "format": "double",
                    "description": "Altitude of point which user click",
                    "type": "number"
                },
                "Heading": {
                    "format": "double",
                    "description": "Heading of current viewport,\r\nthe angle from the local north direction\r\nwhere a positive angle is increasing eastward,\r\nusing degree (0 -&gt; 360)",
                    "type": "number"
                },
                "Pitch": {
                    "format": "double",
                    "description": "Pitch of current viewport,\r\nthe angle from local east-north plane.\r\nPositive pitch angles are above the plane.\r\nNegative pitch angles are below the plane,\r\nusing degree (-180 -&gt; 180)",
                    "type": "number"
                },
                "Roll": {
                    "format": "double",
                    "type": "number"
                },
                "OneTimeToken": {
                    "type": "string"
                }
            }
        },
        "SearchClosetPhotoResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "PhotoUrl": {
                    "type": "string"
                },
                "ThumbnailUrl": {
                    "type": "string"
                },
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                },
                "Heading": {
                    "format": "double",
                    "type": "number"
                },
                "Pitch": {
                    "format": "double",
                    "type": "number"
                },
                "Altitude": {
                    "format": "double",
                    "type": "number"
                },
                "RelAltitude": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "SearchPhotoRequest": {
            "type": "object",
            "properties": {
                "Take": {
                    "format": "int32",
                    "type": "integer"
                },
                "Skip": {
                    "format": "int32",
                    "type": "integer"
                },
                "OneTimeToken": {
                    "type": "string"
                }
            }
        },
        "GetPhotoUrl": {
            "type": "object",
            "properties": {
                "LibraryId": {
                    "type": "string"
                },
                "VersionId": {
                    "type": "string"
                },
                "PhotoId": {
                    "type": "string"
                },
                "OneTimeToken": {
                    "type": "string"
                },
                "SiteId": {
                    "type": "string"
                }
            }
        },
        "RequestUpload3dModelResponse": {
            "type": "object",
            "properties": {
                "UploadId": {
                    "type": "string"
                },
                "UploadTileSetSasUrl": {
                    "type": "string"
                },
                "Upload3dPhotoSasUrl": {
                    "type": "string"
                }
            }
        },
        "FinishUpload3dModelRequest": {
            "type": "object",
            "properties": {
                "UploadId": {
                    "type": "string"
                },
                "Height": {
                    "format": "double",
                    "type": "number"
                },
                "LicenseType": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "SectorResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "SectorName": {
                    "type": "string"
                },
                "CellName": {
                    "type": "string"
                },
                "SectorAngle": {
                    "format": "int32",
                    "type": "integer"
                },
                "Kpi3G1": {
                    "format": "double",
                    "type": "number"
                },
                "Kpi3G2": {
                    "format": "double",
                    "type": "number"
                },
                "Kpi3G3": {
                    "format": "double",
                    "type": "number"
                },
                "Kpi3G4": {
                    "format": "double",
                    "type": "number"
                },
                "Kpi4G1": {
                    "format": "double",
                    "type": "number"
                },
                "Kpi4G2": {
                    "format": "double",
                    "type": "number"
                },
                "Kpi4G3": {
                    "format": "double",
                    "type": "number"
                },
                "Kpi4G4": {
                    "format": "double",
                    "type": "number"
                },
                "Alarms": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SectorAlarmDataResponse"
                    }
                }
            }
        },
        "SectorAlarmDataResponse": {
            "type": "object",
            "properties": {
                "CreatedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "Slogan": {
                    "type": "string"
                },
                "Attribute": {
                    "type": "string"
                }
            }
        },
        "TransactionOverviewModel": {
            "description": "Transaction Overview model",
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "OrderId": {
                    "description": "transaction id",
                    "type": "string"
                },
                "PurchaserEmail": {
                    "description": "purchase email",
                    "type": "string"
                },
                "TransactionTypeText": {
                    "description": "transaction type",
                    "type": "string"
                },
                "TransactionType": {
                    "format": "int32",
                    "description": "transaction type, 0: subscription monthly, 10: dots, 20: 3dmodel, 30: clutter",
                    "type": "integer"
                },
                "PlanTypeText": {
                    "description": "plan type",
                    "type": "string"
                },
                "PlanType": {
                    "format": "int32",
                    "description": "plan type, 0: empty, 10: per view, 20: perpectual",
                    "type": "integer"
                },
                "Unit": {
                    "format": "int32",
                    "description": "unit",
                    "type": "integer"
                },
                "PricePerUnit": {
                    "format": "double",
                    "description": "price per unit",
                    "type": "number"
                },
                "Total": {
                    "format": "double",
                    "description": "total",
                    "type": "number"
                },
                "Info": {
                    "$ref": "#/definitions/TransactionAdditionInfo",
                    "description": "info of transaction"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "description": "create date in UTC",
                    "type": "string"
                }
            }
        },
        "TransactionAdditionInfo": {
            "description": "transaction addition info",
            "type": "object",
            "properties": {
                "SiteName": {
                    "description": "if purchase 3d model, clutter",
                    "type": "string"
                },
                "VersionName": {
                    "description": "if purchase 3d model, clutter",
                    "type": "string"
                },
                "Week": {
                    "description": "if purchase dots",
                    "type": "string"
                },
                "NetworkProvider": {
                    "description": "if purchase dots",
                    "type": "string"
                },
                "TotalDots": {
                    "description": "if purchase dots",
                    "type": "string"
                },
                "SubscriptionType": {
                    "description": "",
                    "type": "string"
                }
            }
        },
        "TransactionDetailModel": {
            "description": "Transaction Detail",
            "type": "object",
            "properties": {
                "Payment": {
                    "$ref": "#/definitions/TransactionPaymentInfo",
                    "description": "Payment"
                },
                "Billing": {
                    "$ref": "#/definitions/TransactionBillingInfo",
                    "description": "Billing info"
                },
                "Customer": {
                    "$ref": "#/definitions/TransactionCustomerInfo"
                },
                "Id": {
                    "type": "string"
                },
                "OrderId": {
                    "description": "transaction id",
                    "type": "string"
                },
                "PurchaserEmail": {
                    "description": "purchase email",
                    "type": "string"
                },
                "TransactionTypeText": {
                    "description": "transaction type",
                    "type": "string"
                },
                "TransactionType": {
                    "format": "int32",
                    "description": "transaction type, 0: subscription monthly, 10: dots, 20: 3dmodel, 30: clutter",
                    "type": "integer"
                },
                "PlanTypeText": {
                    "description": "plan type",
                    "type": "string"
                },
                "PlanType": {
                    "format": "int32",
                    "description": "plan type, 0: empty, 10: per view, 20: perpectual",
                    "type": "integer"
                },
                "Unit": {
                    "format": "int32",
                    "description": "unit",
                    "type": "integer"
                },
                "PricePerUnit": {
                    "format": "double",
                    "description": "price per unit",
                    "type": "number"
                },
                "Total": {
                    "format": "double",
                    "description": "total",
                    "type": "number"
                },
                "Info": {
                    "$ref": "#/definitions/TransactionAdditionInfo",
                    "description": "info of transaction"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "description": "create date in UTC",
                    "type": "string"
                }
            }
        },
        "TransactionPaymentInfo": {
            "description": "payment info",
            "type": "object",
            "properties": {
                "CardLast4Digit": {
                    "type": "string"
                },
                "CardType": {
                    "type": "string"
                }
            }
        },
        "TransactionBillingInfo": {
            "description": "Transaction Billing Info",
            "type": "object",
            "properties": {
                "Address": {
                    "type": "string"
                },
                "Suburb": {
                    "type": "string"
                },
                "City": {
                    "type": "string"
                },
                "Country": {
                    "type": "string"
                }
            }
        },
        "TransactionCustomerInfo": {
            "type": "object",
            "properties": {
                "FullName": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                }
            }
        },
        "TrivalLogMultiRequest": {
            "type": "object",
            "properties": {
                "Logs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TrivalLogRequest"
                    }
                }
            }
        },
        "TrivalLogRequest": {
            "type": "object",
            "properties": {
                "CreatedDateUtc": {
                    "type": "string"
                },
                "Location": {
                    "$ref": "#/definitions/LocationObj"
                },
                "Data": {
                    "$ref": "#/definitions/DataObj"
                }
            }
        },
        "LocationObj": {
            "type": "object",
            "properties": {
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "DataObj": {
            "type": "object",
            "properties": {
                "ss": {
                    "format": "int32",
                    "type": "integer"
                },
                "rsrp": {
                    "format": "int32",
                    "type": "integer"
                },
                "rsrq": {
                    "format": "int32",
                    "type": "integer"
                },
                "cqi": {
                    "format": "int32",
                    "type": "integer"
                },
                "ta": {
                    "format": "int32",
                    "type": "integer"
                },
                "level": {
                    "format": "int32",
                    "type": "integer"
                },
                "asuLevel": {
                    "format": "int32",
                    "type": "integer"
                },
                "mcc": {
                    "format": "int32",
                    "type": "integer"
                },
                "mnc": {
                    "format": "int32",
                    "type": "integer"
                },
                "ci": {
                    "format": "int32",
                    "type": "integer"
                },
                "pci": {
                    "format": "int32",
                    "type": "integer"
                },
                "tac": {
                    "format": "int32",
                    "type": "integer"
                },
                "eafcn": {
                    "format": "int32",
                    "type": "integer"
                },
                "rssrn": {
                    "format": "int32",
                    "type": "integer"
                },
                "isRegistered": {
                    "type": "boolean"
                }
            }
        },
        "SearchTrivalRequest": {
            "description": "Request for search points in polygon",
            "type": "object",
            "properties": {
                "PolygonCoordinates": {
                    "description": "Points of Polygon, at least 3",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoordinateRequest"
                    }
                }
            }
        },
        "SearchTrivalReponse": {
            "type": "object",
            "properties": {
                "Weeks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/WeekResponseObject"
                    }
                },
                "Trivals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/TrivalResponse"
                    }
                },
                "OperatorNetworks": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OperatorNetworkObject"
                    }
                }
            }
        },
        "WeekResponseObject": {
            "type": "object",
            "properties": {
                "WeekNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "WeekDisplay": {
                    "type": "string"
                }
            }
        },
        "TrivalResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "type": "string"
                },
                "Lat": {
                    "format": "double",
                    "type": "number"
                },
                "Lon": {
                    "format": "double",
                    "type": "number"
                },
                "AverageRsrp": {
                    "format": "double",
                    "type": "number"
                },
                "Week": {
                    "format": "int32",
                    "type": "integer"
                },
                "IsPurchased": {
                    "type": "boolean"
                },
                "OperatorNetwork": {
                    "type": "string",
                    "readOnly": true
                },
                "MccMncCombine": {
                    "type": "string"
                }
            }
        },
        "OperatorNetworkObject": {
            "type": "object",
            "properties": {
                "Mnc": {
                    "format": "int32",
                    "type": "integer"
                },
                "Mcc": {
                    "format": "int32",
                    "type": "integer"
                },
                "OperatorName": {
                    "type": "string",
                    "readOnly": true
                },
                "IsSelected": {
                    "type": "boolean"
                }
            }
        },
        "FilterTrivalRequest": {
            "description": "Request for search points in polygon",
            "type": "object",
            "properties": {
                "PolygonCoordinates": {
                    "description": "Points of Polygon, at least 3",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoordinateRequest"
                    }
                },
                "WeekNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "MccCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "MncCode": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "CheckNewestDataForAreaRequest": {
            "description": "Request for check newest data in area",
            "type": "object",
            "properties": {
                "PolygonCoordinates": {
                    "description": "Points of Polygon, at least 3",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CoordinateRequest"
                    }
                },
                "MccCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "MncCode": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "NetworkResponse": {
            "type": "object",
            "properties": {
                "NetworkName": {
                    "type": "string"
                },
                "Mcc": {
                    "format": "int32",
                    "type": "integer"
                },
                "Mnc": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "GetMonthForAreaRequest": {
            "description": "Request for get month of area/network",
            "type": "object",
            "properties": {
                "MccCode": {
                    "format": "int32",
                    "type": "integer"
                },
                "MncCode": {
                    "format": "int32",
                    "type": "integer"
                }
            }
        },
        "MonthResponseObject": {
            "type": "object",
            "properties": {
                "MonthNumber": {
                    "format": "int32",
                    "type": "integer"
                },
                "MonthDisplay": {
                    "type": "string"
                }
            }
        },
        "PurchaseTrialRequest": {
            "description": "",
            "required": [
                "PointIds",
                "OperatorNetwork",
                "WeekDisplay"
            ],
            "type": "object",
            "properties": {
                "PointIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "OperatorNetwork": {
                    "type": "string"
                },
                "WeekDisplay": {
                    "type": "string"
                }
            }
        },
        "RequestUploadPhotoResponse": {
            "description": "Response for upload photo request",
            "type": "object",
            "properties": {
                "UploadId": {
                    "description": "Upload Id",
                    "type": "string"
                },
                "UploadSasUrl": {
                    "description": "Upload url with shared access signature",
                    "type": "string"
                }
            }
        },
        "GetUsersOfOperatorResponse": {
            "description": "Response when get list user of operator",
            "type": "object",
            "properties": {
                "Total": {
                    "format": "int32",
                    "description": "Total records",
                    "type": "integer"
                },
                "Users": {
                    "description": "Users in operator",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserInOperatorWithRoleObj"
                    }
                }
            }
        },
        "UserInOperatorWithRoleObj": {
            "type": "object",
            "properties": {
                "RoleName": {
                    "type": "string"
                },
                "Banned": {
                    "type": "boolean"
                },
                "Id": {
                    "type": "string"
                },
                "UserName": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "PhoneNumber": {
                    "type": "string"
                },
                "AvatarUrl": {
                    "type": "string"
                }
            }
        },
        "GetUserInformationResponse": {
            "description": "Response when get user information",
            "type": "object",
            "properties": {
                "FirstName": {
                    "description": "First Name of user",
                    "type": "string"
                },
                "LastName": {
                    "description": "Last Name of user",
                    "type": "string"
                },
                "Email": {
                    "description": "Email of user",
                    "type": "string"
                },
                "Username": {
                    "description": "username of user",
                    "type": "string"
                },
                "Id": {
                    "description": "Id of user",
                    "type": "string"
                },
                "PhoneNumber": {
                    "description": "Phone number",
                    "type": "string"
                },
                "RoleName": {
                    "description": "Role names of user",
                    "type": "string"
                }
            }
        },
        "UpdateUserInfoRequest": {
            "description": "Request for updating info of user",
            "required": [
                "FirstName",
                "LastName"
            ],
            "type": "object",
            "properties": {
                "FirstName": {
                    "description": "First Name of user",
                    "type": "string"
                },
                "LastName": {
                    "description": "Last Name of user",
                    "type": "string"
                },
                "PhoneNumber": {
                    "description": "Phone number",
                    "type": "string"
                }
            }
        },
        "ChangeRoleOfUserRequest": {
            "description": "Request for changing role of user",
            "required": [
                "RoleName",
                "NewRoleName",
                "Email"
            ],
            "type": "object",
            "properties": {
                "RoleName": {
                    "description": "Role name, it should be only in 2 values: User or Administrator",
                    "type": "string"
                },
                "NewRoleName": {
                    "description": "Role name, it should be only in 2 values: User or Administrator",
                    "type": "string"
                },
                "Email": {
                    "description": "Email",
                    "type": "string"
                }
            }
        },
        "GetListInvitationsResponse": {
            "description": "Get list invitation response",
            "type": "object",
            "properties": {
                "Total": {
                    "format": "int32",
                    "description": "Total records",
                    "type": "integer"
                },
                "Invitations": {
                    "description": "Invitations in operator",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/UserInvitation"
                    }
                }
            }
        },
        "UserInvitation": {
            "type": "object",
            "properties": {
                "OperatorId": {
                    "type": "string"
                },
                "Email": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                },
                "RoleName": {
                    "type": "string"
                },
                "InvitationStatus": {
                    "format": "int32",
                    "enum": [
                        1,
                        2,
                        3,
                        4
                    ],
                    "type": "integer"
                },
                "Id": {
                    "type": "string"
                },
                "CreatedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "UpdatedDateUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "InviteRequest": {
            "description": "Request for inviting someone to operator",
            "required": [
                "EmailAddress",
                "RoleSystemName"
            ],
            "type": "object",
            "properties": {
                "EmailAddress": {
                    "description": "Emaill address",
                    "type": "string"
                },
                "FirstName": {
                    "description": "First Name",
                    "type": "string"
                },
                "LastName": {
                    "description": "Last Name",
                    "type": "string"
                },
                "RoleSystemName": {
                    "description": "Role system name, just only use in these values: OperatorAdministrator or User",
                    "type": "string"
                }
            }
        },
        "LoginAndAcceptInvitationRequest": {
            "description": "Request for accepting an invitation",
            "required": [
                "Token",
                "Password"
            ],
            "type": "object",
            "properties": {
                "Token": {
                    "description": "Invitation Id encrypt",
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                }
            }
        },
        "AcceptInvitationRequest": {
            "description": "Request for accepting an invitation",
            "required": [
                "Token"
            ],
            "type": "object",
            "properties": {
                "Token": {
                    "description": "Invitation Id encrypt",
                    "type": "string"
                }
            }
        },
        "ForceAcceptToken": {
            "type": "object",
            "properties": {
                "InvitationId": {
                    "type": "string"
                }
            }
        },
        "SignupAndAcceptInvitationRequest": {
            "description": "Request for accepting an invitation",
            "required": [
                "Token",
                "Password",
                "FirstName",
                "LastName"
            ],
            "type": "object",
            "properties": {
                "Token": {
                    "description": "Invitation Id encrypt",
                    "type": "string"
                },
                "Password": {
                    "type": "string"
                },
                "FirstName": {
                    "type": "string"
                },
                "LastName": {
                    "type": "string"
                }
            }
        },
        "ResendInvitationRequest": {
            "description": "Request for resending an invitation",
            "required": [
                "Email"
            ],
            "type": "object",
            "properties": {
                "Email": {
                    "description": "Emaill",
                    "type": "string"
                }
            }
        },
        "RemoveInvitationRequest": {
            "description": "Request for declining an invitation",
            "required": [
                "Email"
            ],
            "type": "object",
            "properties": {
                "Email": {
                    "description": "Email",
                    "type": "string"
                }
            }
        },
        "ValidateInviteResponseModel": {
            "description": "ValidateInviteResponseModel",
            "type": "object",
            "properties": {
                "NeedRegister": {
                    "description": "NeedRegister",
                    "type": "boolean"
                },
                "LibraryId": {
                    "type": "string"
                },
                "LibraryName": {
                    "type": "string"
                },
                "InvitationEmail": {
                    "type": "string"
                }
            }
        },
        "PurchaseVirtualLosRequest": {
            "required": [
                "VersionId",
                "BEndSiteIds"
            ],
            "type": "object",
            "properties": {
                "VersionId": {
                    "type": "string"
                },
                "BEndSiteIds": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "VirtualLosResponse": {
            "description": "",
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Id",
                    "type": "string"
                },
                "VersionName": {
                    "description": "version name, e.g version-3-jan-2018",
                    "type": "string"
                },
                "PurchasedDate": {
                    "format": "date-time",
                    "description": "date of purchased",
                    "type": "string"
                },
                "Status": {
                    "format": "int32",
                    "description": "status of virtual los, 0 = pending, 10 = processed, 20 = failed",
                    "enum": [
                        0,
                        10,
                        20
                    ],
                    "type": "integer"
                },
                "SitePhotos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SitePhotoLosResponse"
                    }
                }
            }
        },
        "SitePhotoLosResponse": {
            "description": "Site photo los response",
            "type": "object",
            "properties": {
                "SiteName": {
                    "description": "Site Name",
                    "type": "string"
                },
                "PhotoUrl": {
                    "description": "Photo Url",
                    "type": "string"
                },
                "ThumbnailUrl": {
                    "description": "",
                    "type": "string"
                },
                "Distance": {
                    "format": "double",
                    "type": "number"
                },
                "Bearing": {
                    "format": "double",
                    "type": "number"
                },
                "Height": {
                    "format": "double",
                    "type": "number"
                }
            }
        },
        "VirtualLosGroupResponse": {
            "type": "object",
            "properties": {
                "Id": {
                    "description": "Id",
                    "type": "string"
                },
                "VersionName": {
                    "description": "version name, e.g version-3-jan-2018",
                    "type": "string"
                },
                "PurchasedDate": {
                    "format": "date-time",
                    "description": "date of purchased",
                    "type": "string"
                },
                "Status": {
                    "format": "int32",
                    "description": "status of virtual los, 0 = pending, 10 = processed, 20 = failed",
                    "enum": [
                        0,
                        10,
                        20
                    ],
                    "type": "integer"
                },
                "SitePhotoGroups": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SitePhotoLosGroupHeightResponse"
                    }
                }
            }
        },
        "SitePhotoLosGroupHeightResponse": {
            "type": "object",
            "properties": {
                "Height": {
                    "format": "double",
                    "type": "number"
                },
                "SitePhotos": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/SitePhotoLosResponse"
                    }
                }
            }
        },
        "RecordVideoRequestNew": {
            "type": "object",
            "properties": {
                "StreamName": {
                    "type": "string"
                },
                "VideoFileName": {
                    "type": "string"
                },
                "ThumbnailFileName": {
                    "type": "string"
                },
                "Duration": {
                    "type": "string"
                },
                "StartDateTimeUtc": {
                    "format": "date-time",
                    "type": "string"
                },
                "FinishDateTimeUtc": {
                    "format": "date-time",
                    "type": "string"
                }
            }
        },
        "ChangeStatusCctvRequest": {
            "description": "model for notify that status of CCTV is change",
            "required": [
                "StreamName",
                "Status"
            ],
            "type": "object",
            "properties": {
                "StreamName": {
                    "description": "Stream name (id of cctv with cctv_ as prefix)",
                    "type": "string"
                },
                "Status": {
                    "description": "Status of cctv",
                    "type": "boolean"
                }
            }
        }
    }
}